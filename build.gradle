buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'nl.vv32.rcon'
version '1.0.0'

repositories {
    mavenCentral()
}

dependencies {


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
       mavenJava(MavenPublication) {
           artifactId = 'rcon'
           from components.java
           versionMapping {
               usage('java-api') {
                   fromResolutionOf('runtimeClasspath')
               }
               usage('java-runtime') {
                   fromResolutionResult()
               }
           }
           pom {
               name = "RCON"
               description = "Java implementation of the RCON protocol"
               url = "https://github.com/jobfeikens/rcon"
               licenses {
                   license {
                       name = "GNU General Public License, Version 3.0"
                       url = "https://www.gnu.org/licenses/gpl-3.0.txt"
                   }
               }
               developers {
                   developer {
                       id = "jobfeikens"
                       name = "Job Feikens"
                       email = "job@vv32.nl"
                   }
               }
               scm {
                   connection = "scm:git:https://github.com/jobfeikens/rcon.git"
                   developerConnection = "scm:git:git@github.com:jobfeikens/rcon.git"
                   url = "https://github.com/jobfeikens/rcon"
               }
           }
       }
    }
    repositories {
        maven {
            credentials {
                username = ""
                password = ""
            }
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
